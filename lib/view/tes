@override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Color.fromRGBO(244, 244, 244, 1),
      appBar: AppBar(
        automaticallyImplyLeading: false,
        backgroundColor: Color.fromARGB(255, 41, 69, 91),
        title: Row(
          mainAxisAlignment: MainAxisAlignment.start,
          children: <Widget>[
            Container(
              child: Text(
                "Tambah Barang Masuk",
                style: TextStyle(color: Colors.white, fontSize: 20.0),
              ),
            )
          ],
        ),
      ),
      body: Form(
        key: _key,
        child: ListView(
          padding: EdgeInsets.all(16.0),
          children: <Widget>[
            FutureBuilder<List<BarangModel>>(
              future: _fetchBR(),
              builder: (BuildContext context,
                  AsyncSnapshot<List<BarangModel>> snapshot) {
                if (!snapshot.hasData) {
                  return CircularProgressIndicator();
                }

                if (snapshot.hasError) {
                  debugPrint('Error fetching barang: ${snapshot.error}');
                  return Text('Error fetching barang');
                }

                return Container(
                  padding: EdgeInsets.symmetric(horizontal: 10.0),
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(10.0),
                    border: Border.all(
                      style: BorderStyle.solid,
                      color: Color.fromARGB(255, 32, 54, 70),
                      width: 0.80,
                    ),
                  ),
                  child: DropdownButtonHideUnderline(
                    child: DropdownButton<BarangModel>(
                      items: snapshot.data!
                          .map((listBR) => DropdownMenuItem<BarangModel>(
                                child: Text(
                                    '${listBR.nama_barang} (${listBR.nama_brand})'),
                                value: listBR,
                              ))
                          .toList(),
                      onChanged: (BarangModel? value) {
                        setState(() {
                          _currentBR = value;
                          Barang = _currentBR?.id_barang; // Cek jika null
                          debugPrint('Selected Barang: $Barang');
                        });
                      },
                      isExpanded: true,
                      hint: Text(Barang == null
                          ? "Pilih Barang"
                          : '${_currentBR != null ? _currentBR!.nama_barang : "Barang tidak ditemukan"} (${_currentBR != null ? _currentBR!.nama_brand : ""})'),
                    ),
                  ),
                );
              },
            ),
            SizedBox(
              height: 20.0,
            ),
            MaterialButton(
              color: Color.fromARGB(255, 41, 69, 91),
              onPressed: scanBarcode, // Panggil scan barcode
              child: Text(
                "Pindai Barcode",
                style: TextStyle(color: Colors.white),
              ),
              shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(10)),
            ),
            SizedBox(
              height: 20.0,
            ),
            TextFormField(
              validator: (e) {
                if ((e as dynamic).isEmpty) {
                  return "Silahkan isi Jumlah";
                }
                return null;
              },
              onSaved: (e) => Jumlah = e,
              focusNode: JmFocusNode,
              decoration: InputDecoration(
                labelText: 'Jumlah Barang',
                labelStyle: TextStyle(
                    color: JmFocusNode.hasFocus
                        ? Colors.blue
                        : Color.fromARGB(255, 32, 54, 70)),
                border: OutlineInputBorder(
                  borderRadius: BorderRadius.circular(10),
                ),
                focusedBorder: OutlineInputBorder(
                  borderSide:
                      const BorderSide(color: Color.fromARGB(255, 32, 54, 70)),
                ),
              ),
            ),
            SizedBox(
              height: 25,
            ),
            MaterialButton(
              color: Color.fromARGB(255, 41, 69, 91),
              onPressed: () {
                check();
              },
              child: Text(
                "Simpan",
                style: TextStyle(color: Colors.white),
              ),
              shape: RoundedRectangleBorder(
                  borderRadius: BorderRadius.circular(10)),
            ),
          ],
        ),
      ),
    );
  }
}
